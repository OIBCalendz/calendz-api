language: node_js

notifications:
  email: false

node_js:
  - "12.18.2"

services:
  - mongodb

before_install:
  - if [ "$TRAVIS_BRANCH" == "master" ]; then
      openssl aes-256-cbc -K $encrypted_6c0fe41f00fc_key -iv $encrypted_6c0fe41f00fc_iv
        -in .travis/deploy_key.enc -out .travis/deploy_key -d;
    fi

before_script:
  - sleep 10
  - mongo calendz --eval 'db.createUser({user:"username",pwd:"password",roles:["readWrite"]});'

install: npm install

jobs:
  include:
    - stage: Tests
      if: |
        branch = develop AND \
        tag IS blank AND \
        commit_message !~ /(no-deploy|wip)/
      script: 
        - npm run lint
        - npm run test:mock
        - npm run test:coverage
        - npm run test:coveralls
      after_success:
        - wget https://raw.githubusercontent.com/calendz/travis-discord-webhook/master/send.sh
        - chmod +x send.sh
        - ./send.sh success $DISCORD_WEBHOOK_URL
      after_failure:
        - wget https://raw.githubusercontent.com/calendz/travis-discord-webhook/master/send.sh
        - chmod +x send.sh
        - ./send.sh failure $DISCORD_WEBHOOK_URL

    # Build and push both versionned and current versions
    - stage: Build Docker image
      if: branch = master
      script:
      - "PACKAGE_VERSION=$(cat package.json | grep version | head -1 | awk -F: '{ print $2 }' | sed 's/[\",]//g' | tr -d '[[:space:]]')"
      - echo "==== Building calendz/api:$PACKAGE_VERSION ===="
      - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
      - docker build -t calendz/api .
      - docker images
      - docker tag calendz/api calendz/api:current
      - docker tag calendz/api calendz/api:${PACKAGE_VERSION}
      - docker push calendz/api:current
      - docker push calendz/api:${PACKAGE_VERSION}

    # Deploy latest API version
    - stage: Deploy
      if: branch = master
      script:
        - sh .travis/deploy.sh

cache:
  directories:
    - node_modules